(()=>{document.querySelector("a-scene");var e=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads():null;console.log(e),AFRAME.registerComponent("camera-warning",{init:function(){this.cam=this.el.sceneEl.querySelector("#player"),this.object=this.el.sceneEl.querySelector("#ball"),this.objects=this.el.sceneEl.querySelector("#gen"),this.triangle=this.cam.querySelector("#triangle"),this.animate=this.triangle.querySelector("a-animation")},update:function(){this.cam.addEventListener("distance-warning",(function(e){console.log(e),e.detail.target.emit("warn")}))},tick:function(){let e=this.cam.object3D.position,t=this.object.object3D.position,i=e.distanceTo(t);for(var n=0;n<1;n++){let t=this.objects.children[n].object3D.position;e.distanceTo(t)<5&&this.triangle.emit("distance-warning",{direction:"left"})}i<5&&console.log("too close")}}),AFRAME.registerComponent("camera-collision",{init:function(){this.triangle=this.el.querySelector("a-triangle"),this.el.addEventListener("collide",(function(e){console.log(e.detail.target.querySelector("a-triangle")),e.detail.target.emit("warn")}))}}),AFRAME.registerComponent("distance-detect",{init:function(){this.cam=this.el.sceneEl.querySelector("#player"),this.triangle=this.cam.querySelector("#triangle")},update:function(){this.el.addEventListener("distance-warning",(function(e){e.detail.el_tochange.emit("warn")}))},tick:function(){let e=this.cam.object3D.position,t=this.el.object3D.position;distanceTo=(e,t)=>Math.sqrt(Math.abs((e.x-t.x)*(e.x-t.x)+(e.z-t.z)*(e.z-t.z))),distanceTo(t,e)<5&&this.el.emit("distance-warning",{el_tochange:this.triangle})}})})();